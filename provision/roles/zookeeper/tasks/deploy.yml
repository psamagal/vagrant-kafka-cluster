---
- name: get zookeeper tarball
  get_url:
    url:     "{{ zookeeper_url }}"
    dest:    "{{ zookeeper_download_path }}"
    validate_certs: false
  become: true

- name: Ensure group '{{app_group}}' is present
  group:
    name: "{{app_group}}"
    state: present
  become: true

- name: Ensure user '{{app_user}}' is present
  user:
    name: "{{ app_user }}"
    comment: "{{ app_user }}"
    group: "{{ app_group }}"
  become: true

- name: Ensure '{{ app_dir }}' folder is present
  file:
    path: "{{ app_dir }}"
    owner: "{{ app_user }}"
    group: "{{ app_group }}"
    state: directory
  become: true


- name: Ensure '{{ log_dir }}' folder is present
  file:
    path: "{{ log_dir }}"
    owner: "{{ app_user }}"
    group: "{{ app_group }}"
    state: directory
  become: true

- name: Ensure '{{ data_dir }}' folder is present
  file:
    path: "{{ data_dir }}"
    owner: "{{ app_user }}"
    group: "{{ app_group }}"
    state: directory
  become: true

- name: unpack archive
  unarchive:
    src: "{{ zookeeper_download_path }}/{{zookeeper_filename}}"
    dest: "{{ app_dir }}"
    remote_src: true
    owner: "{{ app_user }}"
    group: "{{ app_group }}"
  become: true

- name: Setup configuration
  template:
    src: "{{ item.src }}"
    dest: "{{ conf_dir }}/{{ item.dest }}"
    owner: "{{ app_user }}"
    group: "{{ app_group }}"
  with_items:
    - { src: zoo.cfg.j2, dest: zoo.cfg }
    - { src: log4j.properties.j2, dest: log4j.properties }
  become: true

- name: Setup binary
  template:
    src: "zkServer.sh.j2"
    dest: "{{ app_dir }}/{{ zookeeper_folder }}/bin/zkServer.sh"
    owner: "{{ app_user }}"
    group: "{{ app_group }}"
    mode: 0750
  become: true

- name: Create init.d link
  file:
    src: "{{ app_dir }}/{{ zookeeper_folder }}/bin/zkServer.sh"
    dest: "/etc/init.d/{{ app_name }}"
    state: link
  become: true

- name: Ensure {{ app_name }}
  service:
    name: "{{ app_name }}"
    state: started
  become: true